{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\n\n// With Redux toolkit\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n    decrement(state) {\n      state.counter--;\n    },\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n  }\n});\nconst store = configureStore({\n  //reducer: {counter: counterSlice.reducer} // If we have multiple reducers, wrap all reducers from multiple slicers to one object\n  reducer: counterSlice.reducer\n});\nexport const counterActions = counterSlice.actions;\n\n// Without Redux Toolkit\n/* import { createStore } from 'redux';\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    }\r\n  };\r\n\r\n  if (action.type === 'increase') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    }\r\n  };\r\n\r\n  if (action.type === 'decrement') {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter\r\n    }\r\n  }\r\n\r\n  if (action.type === 'toggle') {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter\r\n    }\r\n  }\r\n\r\n  return state;\r\n} \r\n\r\nconst store = createStore(counterReducer);*/\n\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","initialState","counter","showCounter","counterSlice","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","store","reducer","counterActions","actions"],"sources":["C:/Users/YoonsikOh/Documents/VSCode/React course/18-redux/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  counter: 0,\r\n  showCounter: true\r\n};\r\n\r\n// With Redux toolkit\r\nconst counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: initialState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.amount;\r\n    },\r\n    toggleCounter(state) {\r\n      state.showCounter = !state.showCounter;\r\n    }\r\n  }\r\n});\r\n\r\nconst store = configureStore({\r\n  //reducer: {counter: counterSlice.reducer} // If we have multiple reducers, wrap all reducers from multiple slicers to one object\r\n  reducer: counterSlice.reducer,\r\n})\r\n\r\nexport const counterActions = counterSlice.actions\r\n\r\n// Without Redux Toolkit\r\n/* import { createStore } from 'redux';\r\nconst counterReducer = (state = initialState, action) => {\r\n  if (action.type === 'increment') {\r\n    return {\r\n      counter: state.counter + 1,\r\n      showCounter: state.showCounter\r\n    }\r\n  };\r\n\r\n  if (action.type === 'increase') {\r\n    return {\r\n      counter: state.counter + action.amount,\r\n      showCounter: state.showCounter\r\n    }\r\n  };\r\n\r\n  if (action.type === 'decrement') {\r\n    return {\r\n      counter: state.counter - 1,\r\n      showCounter: state.showCounter\r\n    }\r\n  }\r\n\r\n  if (action.type === 'toggle') {\r\n    return {\r\n      counter: state.counter,\r\n      showCounter: !state.showCounter\r\n    }\r\n  }\r\n\r\n  return state;\r\n} \r\n\r\nconst store = createStore(counterReducer);*/\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,cAAc,QAAQ,kBAAkB;AAE9D,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,CAAC;EACVC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAC;EAC/BM,IAAI,EAAE,SAAS;EACfJ,YAAY,EAAEA,YAAY;EAC1BK,QAAQ,EAAE;IACRC,SAASA,CAACC,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDO,SAASA,CAACD,KAAK,EAAE;MACfA,KAAK,CAACN,OAAO,EAAE;IACjB,CAAC;IACDQ,QAAQA,CAACF,KAAK,EAAEG,MAAM,EAAE;MACtBH,KAAK,CAACN,OAAO,GAAGM,KAAK,CAACN,OAAO,GAAGS,MAAM,CAACC,MAAM;IAC/C,CAAC;IACDC,aAAaA,CAACL,KAAK,EAAE;MACnBA,KAAK,CAACL,WAAW,GAAG,CAACK,KAAK,CAACL,WAAW;IACxC;EACF;AACF,CAAC,CAAC;AAEF,MAAMW,KAAK,GAAGd,cAAc,CAAC;EAC3B;EACAe,OAAO,EAAEX,YAAY,CAACW;AACxB,CAAC,CAAC;AAEF,OAAO,MAAMC,cAAc,GAAGZ,YAAY,CAACa,OAAO;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeH,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}